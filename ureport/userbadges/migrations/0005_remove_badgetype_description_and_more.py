# Generated by Django 4.0.8 on 2023-04-04 09:29

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('categories', '0010_alter_category_created_by_alter_category_modified_by_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('userbadges', '0004_alter_badgetype_image_alter_badgetype_is_visible'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='badgetype',
            name='description',
        ),
        migrations.RemoveField(
            model_name='badgetype',
            name='is_visible',
        ),
        migrations.RemoveField(
            model_name='badgetype',
            name='item_category',
        ),
        migrations.RemoveField(
            model_name='badgetype',
            name='item_count',
        ),
        migrations.RemoveField(
            model_name='badgetype',
            name='item_type',
        ),
        migrations.AddField(
            model_name='badgetype',
            name='created_by',
            field=models.ForeignKey(default=1, help_text='The user which originally created this item', on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_creations', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='badgetype',
            name='created_on',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='When this item was originally created'),
        ),
        migrations.AddField(
            model_name='badgetype',
            name='finished_template',
            field=models.TextField(blank=True, default='', help_text='Template for the text to be displayed for earned badges. Use ${total_count} ${left_count} ${total_plural} ${left_plural} as placeholders for the total number of items needed to be read, the number of items left to be read, the translated plural form of the item type (story, article, ...)', verbose_name='Finished template'),
        ),
        migrations.AddField(
            model_name='badgetype',
            name='is_active',
            field=models.BooleanField(db_index=True, default=False, verbose_name='Display or hide this item'),
        ),
        migrations.AddField(
            model_name='badgetype',
            name='modified_by',
            field=models.ForeignKey(default=1, help_text='The user which last modified this item', on_delete=django.db.models.deletion.PROTECT, related_name='%(app_label)s_%(class)s_modifications', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='badgetype',
            name='modified_on',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now, editable=False, help_text='When this item was last modified'),
        ),
        migrations.AddField(
            model_name='badgetype',
            name='unfinished_template',
            field=models.TextField(blank=True, default='', help_text='Template for the text to be displayed for badges which have not been earned yet. Use ${total_count} ${left_count} ${total_plural} ${left_plural} as placeholders for the total number of items needed to be read, the number of items left to be read, the translated plural form of the item type (story, article, ...)', verbose_name='Unfinished template'),
        ),
        migrations.AddField(
            model_name='badgetype',
            name='validation_category',
            field=models.ForeignKey(blank=True, help_text='Restrict badge validation to a specific category', null=True, on_delete=django.db.models.deletion.PROTECT, to='categories.category', verbose_name='Validation category'),
        ),
        migrations.AddField(
            model_name='badgetype',
            name='validation_total',
            field=models.PositiveSmallIntegerField(default=10000, help_text='Offer this badge only to users who completed the specified number of items (from the selected category)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10000)], verbose_name='Total count for validation'),
        ),
    ]
